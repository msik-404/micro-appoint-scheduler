// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: employeespb.proto

package employeespb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EmployeeShort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      *string `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	Name    *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Surname *string `protobuf:"bytes,3,opt,name=surname,proto3,oneof" json:"surname,omitempty"`
}

func (x *EmployeeShort) Reset() {
	*x = EmployeeShort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_employeespb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmployeeShort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmployeeShort) ProtoMessage() {}

func (x *EmployeeShort) ProtoReflect() protoreflect.Message {
	mi := &file_employeespb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmployeeShort.ProtoReflect.Descriptor instead.
func (*EmployeeShort) Descriptor() ([]byte, []int) {
	return file_employeespb_proto_rawDescGZIP(), []int{0}
}

func (x *EmployeeShort) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *EmployeeShort) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *EmployeeShort) GetSurname() string {
	if x != nil && x.Surname != nil {
		return *x.Surname
	}
	return ""
}

type EmployeesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Employees []*EmployeeShort `protobuf:"bytes,1,rep,name=employees,proto3" json:"employees,omitempty"`
}

func (x *EmployeesReply) Reset() {
	*x = EmployeesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_employeespb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmployeesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmployeesReply) ProtoMessage() {}

func (x *EmployeesReply) ProtoReflect() protoreflect.Message {
	mi := &file_employeespb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmployeesReply.ProtoReflect.Descriptor instead.
func (*EmployeesReply) Descriptor() ([]byte, []int) {
	return file_employeespb_proto_rawDescGZIP(), []int{1}
}

func (x *EmployeesReply) GetEmployees() []*EmployeeShort {
	if x != nil {
		return x.Employees
	}
	return nil
}

type EmployeeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId *string `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3,oneof" json:"company_id,omitempty"`
	Id        *string `protobuf:"bytes,2,opt,name=id,proto3,oneof" json:"id,omitempty"`
}

func (x *EmployeeRequest) Reset() {
	*x = EmployeeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_employeespb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmployeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmployeeRequest) ProtoMessage() {}

func (x *EmployeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_employeespb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmployeeRequest.ProtoReflect.Descriptor instead.
func (*EmployeeRequest) Descriptor() ([]byte, []int) {
	return file_employeespb_proto_rawDescGZIP(), []int{2}
}

func (x *EmployeeRequest) GetCompanyId() string {
	if x != nil && x.CompanyId != nil {
		return *x.CompanyId
	}
	return ""
}

func (x *EmployeeRequest) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

type EmployeesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId  *string `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3,oneof" json:"company_id,omitempty"`
	StartValue *string `protobuf:"bytes,2,opt,name=start_value,json=startValue,proto3,oneof" json:"start_value,omitempty"`
	NPerPage   *int64  `protobuf:"varint,3,opt,name=n_per_page,json=nPerPage,proto3,oneof" json:"n_per_page,omitempty"`
}

func (x *EmployeesRequest) Reset() {
	*x = EmployeesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_employeespb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmployeesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmployeesRequest) ProtoMessage() {}

func (x *EmployeesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_employeespb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmployeesRequest.ProtoReflect.Descriptor instead.
func (*EmployeesRequest) Descriptor() ([]byte, []int) {
	return file_employeespb_proto_rawDescGZIP(), []int{3}
}

func (x *EmployeesRequest) GetCompanyId() string {
	if x != nil && x.CompanyId != nil {
		return *x.CompanyId
	}
	return ""
}

func (x *EmployeesRequest) GetStartValue() string {
	if x != nil && x.StartValue != nil {
		return *x.StartValue
	}
	return ""
}

func (x *EmployeesRequest) GetNPerPage() int64 {
	if x != nil && x.NPerPage != nil {
		return *x.NPerPage
	}
	return 0
}

type TimeFrame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From *int32 `protobuf:"varint,1,opt,name=from,proto3,oneof" json:"from,omitempty"`
	To   *int32 `protobuf:"varint,2,opt,name=to,proto3,oneof" json:"to,omitempty"`
}

func (x *TimeFrame) Reset() {
	*x = TimeFrame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_employeespb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeFrame) ProtoMessage() {}

func (x *TimeFrame) ProtoReflect() protoreflect.Message {
	mi := &file_employeespb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeFrame.ProtoReflect.Descriptor instead.
func (*TimeFrame) Descriptor() ([]byte, []int) {
	return file_employeespb_proto_rawDescGZIP(), []int{4}
}

func (x *TimeFrame) GetFrom() int32 {
	if x != nil && x.From != nil {
		return *x.From
	}
	return 0
}

func (x *TimeFrame) GetTo() int32 {
	if x != nil && x.To != nil {
		return *x.To
	}
	return 0
}

type WorkTimes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mo []*TimeFrame `protobuf:"bytes,1,rep,name=mo,proto3" json:"mo,omitempty"`
	Tu []*TimeFrame `protobuf:"bytes,2,rep,name=tu,proto3" json:"tu,omitempty"`
	We []*TimeFrame `protobuf:"bytes,3,rep,name=we,proto3" json:"we,omitempty"`
	Th []*TimeFrame `protobuf:"bytes,4,rep,name=th,proto3" json:"th,omitempty"`
	Fr []*TimeFrame `protobuf:"bytes,5,rep,name=fr,proto3" json:"fr,omitempty"`
	Sa []*TimeFrame `protobuf:"bytes,6,rep,name=sa,proto3" json:"sa,omitempty"`
	Su []*TimeFrame `protobuf:"bytes,7,rep,name=su,proto3" json:"su,omitempty"`
}

func (x *WorkTimes) Reset() {
	*x = WorkTimes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_employeespb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkTimes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkTimes) ProtoMessage() {}

func (x *WorkTimes) ProtoReflect() protoreflect.Message {
	mi := &file_employeespb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkTimes.ProtoReflect.Descriptor instead.
func (*WorkTimes) Descriptor() ([]byte, []int) {
	return file_employeespb_proto_rawDescGZIP(), []int{5}
}

func (x *WorkTimes) GetMo() []*TimeFrame {
	if x != nil {
		return x.Mo
	}
	return nil
}

func (x *WorkTimes) GetTu() []*TimeFrame {
	if x != nil {
		return x.Tu
	}
	return nil
}

func (x *WorkTimes) GetWe() []*TimeFrame {
	if x != nil {
		return x.We
	}
	return nil
}

func (x *WorkTimes) GetTh() []*TimeFrame {
	if x != nil {
		return x.Th
	}
	return nil
}

func (x *WorkTimes) GetFr() []*TimeFrame {
	if x != nil {
		return x.Fr
	}
	return nil
}

func (x *WorkTimes) GetSa() []*TimeFrame {
	if x != nil {
		return x.Sa
	}
	return nil
}

func (x *WorkTimes) GetSu() []*TimeFrame {
	if x != nil {
		return x.Su
	}
	return nil
}

type EmployeeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       *string    `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Surname    *string    `protobuf:"bytes,2,opt,name=surname,proto3,oneof" json:"surname,omitempty"`
	WorkTimes  *WorkTimes `protobuf:"bytes,3,opt,name=work_times,json=workTimes,proto3,oneof" json:"work_times,omitempty"`
	Competence []string   `protobuf:"bytes,4,rep,name=competence,proto3" json:"competence,omitempty"`
}

func (x *EmployeeReply) Reset() {
	*x = EmployeeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_employeespb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmployeeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmployeeReply) ProtoMessage() {}

func (x *EmployeeReply) ProtoReflect() protoreflect.Message {
	mi := &file_employeespb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmployeeReply.ProtoReflect.Descriptor instead.
func (*EmployeeReply) Descriptor() ([]byte, []int) {
	return file_employeespb_proto_rawDescGZIP(), []int{6}
}

func (x *EmployeeReply) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *EmployeeReply) GetSurname() string {
	if x != nil && x.Surname != nil {
		return *x.Surname
	}
	return ""
}

func (x *EmployeeReply) GetWorkTimes() *WorkTimes {
	if x != nil {
		return x.WorkTimes
	}
	return nil
}

func (x *EmployeeReply) GetCompetence() []string {
	if x != nil {
		return x.Competence
	}
	return nil
}

type AddEmployeeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId  *string    `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3,oneof" json:"company_id,omitempty"`
	Name       *string    `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Surname    *string    `protobuf:"bytes,3,opt,name=surname,proto3,oneof" json:"surname,omitempty"`
	WorkTimes  *WorkTimes `protobuf:"bytes,4,opt,name=work_times,json=workTimes,proto3,oneof" json:"work_times,omitempty"`
	Competence []string   `protobuf:"bytes,5,rep,name=competence,proto3" json:"competence,omitempty"`
}

func (x *AddEmployeeRequest) Reset() {
	*x = AddEmployeeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_employeespb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddEmployeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEmployeeRequest) ProtoMessage() {}

func (x *AddEmployeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_employeespb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEmployeeRequest.ProtoReflect.Descriptor instead.
func (*AddEmployeeRequest) Descriptor() ([]byte, []int) {
	return file_employeespb_proto_rawDescGZIP(), []int{7}
}

func (x *AddEmployeeRequest) GetCompanyId() string {
	if x != nil && x.CompanyId != nil {
		return *x.CompanyId
	}
	return ""
}

func (x *AddEmployeeRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *AddEmployeeRequest) GetSurname() string {
	if x != nil && x.Surname != nil {
		return *x.Surname
	}
	return ""
}

func (x *AddEmployeeRequest) GetWorkTimes() *WorkTimes {
	if x != nil {
		return x.WorkTimes
	}
	return nil
}

func (x *AddEmployeeRequest) GetCompetence() []string {
	if x != nil {
		return x.Competence
	}
	return nil
}

type DeleteEmployeeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId *string `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3,oneof" json:"company_id,omitempty"`
	Id        *string `protobuf:"bytes,2,opt,name=id,proto3,oneof" json:"id,omitempty"`
}

func (x *DeleteEmployeeRequest) Reset() {
	*x = DeleteEmployeeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_employeespb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEmployeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEmployeeRequest) ProtoMessage() {}

func (x *DeleteEmployeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_employeespb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEmployeeRequest.ProtoReflect.Descriptor instead.
func (*DeleteEmployeeRequest) Descriptor() ([]byte, []int) {
	return file_employeespb_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteEmployeeRequest) GetCompanyId() string {
	if x != nil && x.CompanyId != nil {
		return *x.CompanyId
	}
	return ""
}

func (x *DeleteEmployeeRequest) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

type UpdateEmployeeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId  *string    `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3,oneof" json:"company_id,omitempty"`
	Id         *string    `protobuf:"bytes,2,opt,name=id,proto3,oneof" json:"id,omitempty"`
	Name       *string    `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Surname    *string    `protobuf:"bytes,4,opt,name=surname,proto3,oneof" json:"surname,omitempty"`
	WorkTimes  *WorkTimes `protobuf:"bytes,5,opt,name=work_times,json=workTimes,proto3,oneof" json:"work_times,omitempty"`
	Competence []string   `protobuf:"bytes,6,rep,name=competence,proto3" json:"competence,omitempty"`
}

func (x *UpdateEmployeeRequest) Reset() {
	*x = UpdateEmployeeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_employeespb_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEmployeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEmployeeRequest) ProtoMessage() {}

func (x *UpdateEmployeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_employeespb_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEmployeeRequest.ProtoReflect.Descriptor instead.
func (*UpdateEmployeeRequest) Descriptor() ([]byte, []int) {
	return file_employeespb_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateEmployeeRequest) GetCompanyId() string {
	if x != nil && x.CompanyId != nil {
		return *x.CompanyId
	}
	return ""
}

func (x *UpdateEmployeeRequest) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *UpdateEmployeeRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateEmployeeRequest) GetSurname() string {
	if x != nil && x.Surname != nil {
		return *x.Surname
	}
	return ""
}

func (x *UpdateEmployeeRequest) GetWorkTimes() *WorkTimes {
	if x != nil {
		return x.WorkTimes
	}
	return nil
}

func (x *UpdateEmployeeRequest) GetCompetence() []string {
	if x != nil {
		return x.Competence
	}
	return nil
}

type TimeSlotsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId       *string `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3,oneof" json:"company_id,omitempty"`
	ServiceId       *string `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3,oneof" json:"service_id,omitempty"`
	ServiceDuration *int32  `protobuf:"varint,3,opt,name=service_duration,json=serviceDuration,proto3,oneof" json:"service_duration,omitempty"`
	Day             *int32  `protobuf:"varint,4,opt,name=day,proto3,oneof" json:"day,omitempty"`
	StartValue      *string `protobuf:"bytes,5,opt,name=start_value,json=startValue,proto3,oneof" json:"start_value,omitempty"`
	NPerPage        *int64  `protobuf:"varint,6,opt,name=n_per_page,json=nPerPage,proto3,oneof" json:"n_per_page,omitempty"`
}

func (x *TimeSlotsRequest) Reset() {
	*x = TimeSlotsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_employeespb_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeSlotsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSlotsRequest) ProtoMessage() {}

func (x *TimeSlotsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_employeespb_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSlotsRequest.ProtoReflect.Descriptor instead.
func (*TimeSlotsRequest) Descriptor() ([]byte, []int) {
	return file_employeespb_proto_rawDescGZIP(), []int{10}
}

func (x *TimeSlotsRequest) GetCompanyId() string {
	if x != nil && x.CompanyId != nil {
		return *x.CompanyId
	}
	return ""
}

func (x *TimeSlotsRequest) GetServiceId() string {
	if x != nil && x.ServiceId != nil {
		return *x.ServiceId
	}
	return ""
}

func (x *TimeSlotsRequest) GetServiceDuration() int32 {
	if x != nil && x.ServiceDuration != nil {
		return *x.ServiceDuration
	}
	return 0
}

func (x *TimeSlotsRequest) GetDay() int32 {
	if x != nil && x.Day != nil {
		return *x.Day
	}
	return 0
}

func (x *TimeSlotsRequest) GetStartValue() string {
	if x != nil && x.StartValue != nil {
		return *x.StartValue
	}
	return ""
}

func (x *TimeSlotsRequest) GetNPerPage() int64 {
	if x != nil && x.NPerPage != nil {
		return *x.NPerPage
	}
	return 0
}

type EmployeeTimeSlots struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmployeeInfo *EmployeeShort `protobuf:"bytes,1,opt,name=employee_info,json=employeeInfo,proto3,oneof" json:"employee_info,omitempty"`
	TimeSlots    []*TimeFrame   `protobuf:"bytes,2,rep,name=time_slots,json=timeSlots,proto3" json:"time_slots,omitempty"`
}

func (x *EmployeeTimeSlots) Reset() {
	*x = EmployeeTimeSlots{}
	if protoimpl.UnsafeEnabled {
		mi := &file_employeespb_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmployeeTimeSlots) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmployeeTimeSlots) ProtoMessage() {}

func (x *EmployeeTimeSlots) ProtoReflect() protoreflect.Message {
	mi := &file_employeespb_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmployeeTimeSlots.ProtoReflect.Descriptor instead.
func (*EmployeeTimeSlots) Descriptor() ([]byte, []int) {
	return file_employeespb_proto_rawDescGZIP(), []int{11}
}

func (x *EmployeeTimeSlots) GetEmployeeInfo() *EmployeeShort {
	if x != nil {
		return x.EmployeeInfo
	}
	return nil
}

func (x *EmployeeTimeSlots) GetTimeSlots() []*TimeFrame {
	if x != nil {
		return x.TimeSlots
	}
	return nil
}

type TimeSlotsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmployeeTimeSlots []*EmployeeTimeSlots `protobuf:"bytes,1,rep,name=employee_time_slots,json=employeeTimeSlots,proto3" json:"employee_time_slots,omitempty"`
}

func (x *TimeSlotsReply) Reset() {
	*x = TimeSlotsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_employeespb_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeSlotsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSlotsReply) ProtoMessage() {}

func (x *TimeSlotsReply) ProtoReflect() protoreflect.Message {
	mi := &file_employeespb_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSlotsReply.ProtoReflect.Descriptor instead.
func (*TimeSlotsReply) Descriptor() ([]byte, []int) {
	return file_employeespb_proto_rawDescGZIP(), []int{12}
}

func (x *TimeSlotsReply) GetEmployeeTimeSlots() []*EmployeeTimeSlots {
	if x != nil {
		return x.EmployeeTimeSlots
	}
	return nil
}

var File_employeespb_proto protoreflect.FileDescriptor

var file_employeespb_proto_rawDesc = []byte{
	0x0a, 0x11, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x70, 0x62, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x70, 0x62,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x78, 0x0a,
	0x0d, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x13,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07,
	0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52,
	0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f,
	0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4a, 0x0a, 0x0e, 0x45, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x65, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65,
	0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x52, 0x09, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79,
	0x65, 0x65, 0x73, 0x22, 0x60, 0x0a, 0x0f, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x42, 0x05,
	0x0a, 0x03, 0x5f, 0x69, 0x64, 0x22, 0xad, 0x01, 0x0a, 0x10, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79,
	0x65, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24,
	0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0a, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x08, 0x6e, 0x50, 0x65, 0x72,
	0x50, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6e, 0x5f, 0x70, 0x65, 0x72,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x22, 0x49, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x00, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x13, 0x0a, 0x02, 0x74,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x02, 0x74, 0x6f, 0x88, 0x01, 0x01,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x74, 0x6f,
	0x22, 0xa3, 0x02, 0x0a, 0x09, 0x57, 0x6f, 0x72, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x26,
	0x0a, 0x02, 0x6d, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x70, 0x62, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x52, 0x02, 0x6d, 0x6f, 0x12, 0x26, 0x0a, 0x02, 0x74, 0x75, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x70, 0x62,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x02, 0x74, 0x75, 0x12, 0x26,
	0x0a, 0x02, 0x77, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x70, 0x62, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x52, 0x02, 0x77, 0x65, 0x12, 0x26, 0x0a, 0x02, 0x74, 0x68, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x70, 0x62,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x02, 0x74, 0x68, 0x12, 0x26,
	0x0a, 0x02, 0x66, 0x72, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x70, 0x62, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x52, 0x02, 0x66, 0x72, 0x12, 0x26, 0x0a, 0x02, 0x73, 0x61, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x70, 0x62,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x02, 0x73, 0x61, 0x12, 0x26,
	0x0a, 0x02, 0x73, 0x75, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x70, 0x62, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x52, 0x02, 0x73, 0x75, 0x22, 0xc7, 0x01, 0x0a, 0x0d, 0x45, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x1d, 0x0a, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x3a, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73,
	0x70, 0x62, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x48, 0x02, 0x52, 0x09,
	0x77, 0x6f, 0x72, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x22, 0xff, 0x01, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x3a, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79,
	0x65, 0x65, 0x73, 0x70, 0x62, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x48,
	0x03, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x75, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x22, 0x66, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x02, 0x69,
	0x64, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x5f, 0x69, 0x64, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x22, 0x9e, 0x02, 0x0a, 0x15, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3a, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x65, 0x73, 0x70, 0x62, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x48, 0x04, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x65, 0x6e, 0x63,
	0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64,
	0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x22, 0xc4, 0x02, 0x0a, 0x10,
	0x54, 0x69, 0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x22, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x02, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x03, 0x64, 0x61, 0x79, 0x88, 0x01, 0x01, 0x12,
	0x24, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0a, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x48, 0x05, 0x52, 0x08, 0x6e, 0x50, 0x65,
	0x72, 0x50, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x64, 0x61, 0x79, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x22, 0xa2, 0x01, 0x0a, 0x11, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x0d, 0x65, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x70, 0x62, 0x2e, 0x45, 0x6d,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x65,
	0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x35,
	0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x70, 0x62,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x53, 0x6c, 0x6f, 0x74, 0x73, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79,
	0x65, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x60, 0x0a, 0x0e, 0x54, 0x69, 0x6d, 0x65, 0x53,
	0x6c, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4e, 0x0a, 0x13, 0x65, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x65, 0x73, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x52, 0x11, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x32, 0xe4, 0x03, 0x0a, 0x03, 0x41, 0x70,
	0x69, 0x12, 0x48, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65,
	0x12, 0x1f, 0x2e, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x70, 0x62, 0x2e, 0x41,
	0x64, 0x64, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x12, 0x22, 0x2e,
	0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x12, 0x22, 0x2e,
	0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0f, 0x46,
	0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x12, 0x1c,
	0x2e, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65,
	0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x11, 0x46, 0x69,
	0x6e, 0x64, 0x4d, 0x61, 0x6e, 0x79, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x12,
	0x1d, 0x2e, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x70, 0x62, 0x2e, 0x45, 0x6d,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x51, 0x0a,
	0x11, 0x46, 0x69, 0x6e, 0x64, 0x4d, 0x61, 0x6e, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x6c, 0x6f,
	0x74, 0x73, 0x12, 0x1d, 0x2e, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x70, 0x62,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x70, 0x62, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x42, 0x42, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d,
	0x73, 0x69, 0x6b, 0x2d, 0x34, 0x30, 0x34, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2d, 0x61, 0x70,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2d, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x65, 0x73, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_employeespb_proto_rawDescOnce sync.Once
	file_employeespb_proto_rawDescData = file_employeespb_proto_rawDesc
)

func file_employeespb_proto_rawDescGZIP() []byte {
	file_employeespb_proto_rawDescOnce.Do(func() {
		file_employeespb_proto_rawDescData = protoimpl.X.CompressGZIP(file_employeespb_proto_rawDescData)
	})
	return file_employeespb_proto_rawDescData
}

var file_employeespb_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_employeespb_proto_goTypes = []interface{}{
	(*EmployeeShort)(nil),         // 0: employeespb.EmployeeShort
	(*EmployeesReply)(nil),        // 1: employeespb.EmployeesReply
	(*EmployeeRequest)(nil),       // 2: employeespb.EmployeeRequest
	(*EmployeesRequest)(nil),      // 3: employeespb.EmployeesRequest
	(*TimeFrame)(nil),             // 4: employeespb.TimeFrame
	(*WorkTimes)(nil),             // 5: employeespb.WorkTimes
	(*EmployeeReply)(nil),         // 6: employeespb.EmployeeReply
	(*AddEmployeeRequest)(nil),    // 7: employeespb.AddEmployeeRequest
	(*DeleteEmployeeRequest)(nil), // 8: employeespb.DeleteEmployeeRequest
	(*UpdateEmployeeRequest)(nil), // 9: employeespb.UpdateEmployeeRequest
	(*TimeSlotsRequest)(nil),      // 10: employeespb.TimeSlotsRequest
	(*EmployeeTimeSlots)(nil),     // 11: employeespb.EmployeeTimeSlots
	(*TimeSlotsReply)(nil),        // 12: employeespb.TimeSlotsReply
	(*emptypb.Empty)(nil),         // 13: google.protobuf.Empty
}
var file_employeespb_proto_depIdxs = []int32{
	0,  // 0: employeespb.EmployeesReply.employees:type_name -> employeespb.EmployeeShort
	4,  // 1: employeespb.WorkTimes.mo:type_name -> employeespb.TimeFrame
	4,  // 2: employeespb.WorkTimes.tu:type_name -> employeespb.TimeFrame
	4,  // 3: employeespb.WorkTimes.we:type_name -> employeespb.TimeFrame
	4,  // 4: employeespb.WorkTimes.th:type_name -> employeespb.TimeFrame
	4,  // 5: employeespb.WorkTimes.fr:type_name -> employeespb.TimeFrame
	4,  // 6: employeespb.WorkTimes.sa:type_name -> employeespb.TimeFrame
	4,  // 7: employeespb.WorkTimes.su:type_name -> employeespb.TimeFrame
	5,  // 8: employeespb.EmployeeReply.work_times:type_name -> employeespb.WorkTimes
	5,  // 9: employeespb.AddEmployeeRequest.work_times:type_name -> employeespb.WorkTimes
	5,  // 10: employeespb.UpdateEmployeeRequest.work_times:type_name -> employeespb.WorkTimes
	0,  // 11: employeespb.EmployeeTimeSlots.employee_info:type_name -> employeespb.EmployeeShort
	4,  // 12: employeespb.EmployeeTimeSlots.time_slots:type_name -> employeespb.TimeFrame
	11, // 13: employeespb.TimeSlotsReply.employee_time_slots:type_name -> employeespb.EmployeeTimeSlots
	7,  // 14: employeespb.Api.AddEmployee:input_type -> employeespb.AddEmployeeRequest
	9,  // 15: employeespb.Api.UpdateEmployee:input_type -> employeespb.UpdateEmployeeRequest
	8,  // 16: employeespb.Api.DeleteEmployee:input_type -> employeespb.DeleteEmployeeRequest
	2,  // 17: employeespb.Api.FindOneEmployee:input_type -> employeespb.EmployeeRequest
	3,  // 18: employeespb.Api.FindManyEmployees:input_type -> employeespb.EmployeesRequest
	10, // 19: employeespb.Api.FindManyTimeSlots:input_type -> employeespb.TimeSlotsRequest
	13, // 20: employeespb.Api.AddEmployee:output_type -> google.protobuf.Empty
	13, // 21: employeespb.Api.UpdateEmployee:output_type -> google.protobuf.Empty
	13, // 22: employeespb.Api.DeleteEmployee:output_type -> google.protobuf.Empty
	6,  // 23: employeespb.Api.FindOneEmployee:output_type -> employeespb.EmployeeReply
	1,  // 24: employeespb.Api.FindManyEmployees:output_type -> employeespb.EmployeesReply
	12, // 25: employeespb.Api.FindManyTimeSlots:output_type -> employeespb.TimeSlotsReply
	20, // [20:26] is the sub-list for method output_type
	14, // [14:20] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_employeespb_proto_init() }
func file_employeespb_proto_init() {
	if File_employeespb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_employeespb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmployeeShort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_employeespb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmployeesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_employeespb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmployeeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_employeespb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmployeesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_employeespb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeFrame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_employeespb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkTimes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_employeespb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmployeeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_employeespb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddEmployeeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_employeespb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEmployeeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_employeespb_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEmployeeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_employeespb_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeSlotsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_employeespb_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmployeeTimeSlots); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_employeespb_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeSlotsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_employeespb_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_employeespb_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_employeespb_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_employeespb_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_employeespb_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_employeespb_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_employeespb_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_employeespb_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_employeespb_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_employeespb_proto_msgTypes[11].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_employeespb_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_employeespb_proto_goTypes,
		DependencyIndexes: file_employeespb_proto_depIdxs,
		MessageInfos:      file_employeespb_proto_msgTypes,
	}.Build()
	File_employeespb_proto = out.File
	file_employeespb_proto_rawDesc = nil
	file_employeespb_proto_goTypes = nil
	file_employeespb_proto_depIdxs = nil
}
